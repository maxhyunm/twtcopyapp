[{"C:\\Users\\User\\nwitter\\src\\index.js":"1","C:\\Users\\User\\nwitter\\src\\components\\App.js":"2","C:\\Users\\User\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\User\\nwitter\\src\\routes\\Home.js":"4","C:\\Users\\User\\nwitter\\src\\routes\\Auth.js":"5","C:\\Users\\User\\nwitter\\src\\fBase.js":"6","C:\\Users\\User\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\User\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\User\\nwitter\\src\\components\\Nweet.js":"9","C:\\Users\\User\\nwitter\\src\\components\\NweetFactory.js":"10","C:\\Users\\User\\nwitter\\src\\components\\AuthForm.js":"11"},{"size":228,"mtime":1609909130644,"results":"12","hashOfConfig":"13"},{"size":2309,"mtime":1609945796936,"results":"14","hashOfConfig":"13"},{"size":1389,"mtime":1609917961383,"results":"15","hashOfConfig":"13"},{"size":992,"mtime":1610001710486,"results":"16","hashOfConfig":"13"},{"size":1512,"mtime":1609998901707,"results":"17","hashOfConfig":"13"},{"size":691,"mtime":1609733160872,"results":"18","hashOfConfig":"13"},{"size":1607,"mtime":1609999102335,"results":"19","hashOfConfig":"13"},{"size":6101,"mtime":1609946743495,"results":"20","hashOfConfig":"13"},{"size":7173,"mtime":1610002103963,"results":"21","hashOfConfig":"13"},{"size":3423,"mtime":1610001954891,"results":"22","hashOfConfig":"13"},{"size":2424,"mtime":1609926695473,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"rc1hkh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\User\\nwitter\\src\\index.js",[],["49","50"],"C:\\Users\\User\\nwitter\\src\\components\\App.js",[],"C:\\Users\\User\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\User\\nwitter\\src\\routes\\Home.js",[],"C:\\Users\\User\\nwitter\\src\\routes\\Auth.js",[],"C:\\Users\\User\\nwitter\\src\\fBase.js",[],"C:\\Users\\User\\nwitter\\src\\components\\Navigation.js",["51"],"C:\\Users\\User\\nwitter\\src\\routes\\Profile.js",["52","53","54"],"import React, { useState } from \"react\";\r\nimport { authService, storageService } from \"fBase\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n// import Nweet from 'components/Nweet';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport default ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [newPhoto, setNewPhoto] = useState(null);\r\n    const [editingName, setEditingName] = useState(false);\r\n    const [editingPhoto, setEditingPhoto] = useState(false);\r\n    // const [nweets, setNweets] = useState([]);\r\n    const toggleEditingName = () => setEditingName((prev) => !prev);\r\n    const toggleEditingPhoto = () => setEditingPhoto((prev) => !prev);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        // window.location.replace(\"/\");\r\n        history.push(\"/\");\r\n    };\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     dbService.collection(\"nweets\").where('creatorId', '==', userObj.uid).orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot)=>{\r\n    //         const nweetArray = snapshot.docs.map(doc=>({id:doc.id, ...doc.data()}));\r\n    //         setNweets(nweetArray);\r\n    //     })\r\n    // }, []);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmitName = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName:newDisplayName });\r\n            refreshUser();\r\n        };\r\n        setEditingName(false);\r\n    }\r\n\r\n    const onSubmitPhoto = async (event) => {\r\n        event.preventDefault();\r\n        if(newPhoto) {\r\n            await storageService.refFromURL(userObj.photoURL).delete()\r\n            const photoRef = storageService.ref().child(`${userObj.uid}/profile/${uuidv4()}`);\r\n            const response = await photoRef.putString(newPhoto, \"data_url\");\r\n            const attachURL = await response.ref.getDownloadURL();\r\n            await userObj.updateProfile({photoURL:attachURL});\r\n            \r\n            refreshUser();\r\n        };\r\n        setNewPhoto(null);\r\n        setEditingPhoto(false);\r\n    }\r\n\r\n    const onChangePhotoClick = (event) => {\r\n        const {\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setNewPhoto(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n        { editingName ? (\r\n            <form onSubmit={onSubmitName} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\" \r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Confirm\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                    marginTop: 10,\r\n                    }}\r\n                />\r\n                \r\n                <span className=\"formBtn cancelEditBtn\" onClick={toggleEditingName}>Cancel Editing</span>\r\n            </form>\r\n        \r\n         ) : (\r\n            <div className=\"profileForm\">\r\n                <span className=\"formBtn editProfileBtn\" onClick={toggleEditingName}>Change Name</span>\r\n            </div>  \r\n         )}\r\n\r\n    { editingPhoto ? (\r\n            <form onSubmit={onSubmitPhoto} className=\"profileForm  modify__propic\">\r\n                <label htmlFor=\"change-pic\" className=\"propic__label\">\r\n                    <span style={{marginRight:10}}>Add Photo</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input \r\n                    className=\"formBtn editProfileBtn\" \r\n                    type=\"file\" \r\n                    id=\"change-pic\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChangePhotoClick}\r\n                    style={{\r\n                        opacity: 0,\r\n                      }}\r\n                />\r\n                {newPhoto && (\r\n                    <div className=\"propic__img\">\r\n                        <img\r\n                        src={newPhoto}\r\n                        style={{\r\n                            backgroundImage: newPhoto,\r\n                        }}\r\n                        width=\"80px\" height=\"80px\" style={{borderRadius:50}}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Confirm\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                    marginTop: 10,\r\n                    }}\r\n                />\r\n                \r\n                <span className=\"formBtn cancelEditBtn\" onClick={toggleEditingPhoto}>Cancel Editing</span>\r\n            </form>\r\n        \r\n         ) : (\r\n            <div className=\"profileForm\">\r\n                <span className=\"formBtn editProfileBtn\" onClick={toggleEditingPhoto}>Change Photo</span>\r\n            </div>  \r\n         )}\r\n\r\n\r\n\r\n\r\n            <div className=\"profileForm\">\r\n                <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\r\n            </div>\r\n            {/* <div>\r\n                {nweets.map(nweet =>\r\n                        <Nweet \r\n                            key={nweet.id} \r\n                            nweetObj={nweet} \r\n                            isOwner={nweet.creatorId===userObj.uid}\r\n                        />\r\n                    )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\User\\nwitter\\src\\components\\Nweet.js",["55","56","57","58","59"],"C:\\Users\\User\\nwitter\\src\\components\\NweetFactory.js",["60"],"C:\\Users\\User\\nwitter\\src\\components\\AuthForm.js",["61","62","63"],"import React, { useState } from 'react';\r\nimport { authService } from \"fBase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        };\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if(newAccount) {\r\n                const data =  await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            } else {\r\n                const data =  await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                ) \r\n            }\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                    <input \r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        required\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        className=\"authInput\" />\r\n                    <input \r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        placeholder=\"Password\" \r\n                        required\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        className=\"authInput\" />\r\n                    <input \r\n                        type=\"submit\" \r\n                        value={newAccount ? \"Sign up\" : \"Sign in\"}\r\n                        className=\"authInput authSubmit\" />\r\n                    {error && <span className=\"authError\">{error}</span>}\r\n                </form>\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"이미 계정이 있으신가요?\" : \"계정이 없으신가요?\"}</span>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":30,"column":21,"nodeType":"70","endLine":30,"endColumn":101},{"ruleId":"71","severity":1,"message":"72","line":10,"column":1,"nodeType":"73","endLine":172,"endColumn":3},{"ruleId":"68","severity":1,"message":"69","line":128,"column":25,"nodeType":"70","endLine":134,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":133,"column":52,"nodeType":"76","endLine":133,"endColumn":77},{"ruleId":"77","severity":1,"message":"78","line":22,"column":8,"nodeType":"79","endLine":22,"endColumn":10,"suggestions":"80"},{"ruleId":"68","severity":1,"message":"69","line":90,"column":13,"nodeType":"70","endLine":90,"endColumn":64},{"ruleId":"68","severity":1,"message":"69","line":107,"column":37,"nodeType":"70","endLine":107,"endColumn":100},{"ruleId":"68","severity":1,"message":"69","line":127,"column":45,"nodeType":"70","endLine":132,"endColumn":47},{"ruleId":"68","severity":1,"message":"69","line":152,"column":57,"nodeType":"70","endLine":152,"endColumn":93},{"ruleId":"68","severity":1,"message":"69","line":85,"column":21,"nodeType":"70","endLine":90,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":4,"column":7,"nodeType":"83","messageId":"84","endLine":4,"endColumn":18},{"ruleId":"81","severity":1,"message":"85","line":24,"column":23,"nodeType":"83","messageId":"84","endLine":24,"endColumn":27},{"ruleId":"81","severity":1,"message":"85","line":28,"column":23,"nodeType":"83","messageId":"84","endLine":28,"endColumn":27},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nweetObj.creatorId'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-unused-vars","'inputStyles' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [nweetObj.creatorId]",{"range":"91","text":"92"},[980,982],"[nweetObj.creatorId]"]