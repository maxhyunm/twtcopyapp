{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_ID","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faFortAwesomeAlt","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","newAttachment","setNewAttachment","userName","setUserName","userPhoto","setUserPhoto","date","createdAtDate","split","useEffect","collection","doc","creatorId","get","then","data","displayName","photoURL","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentURL","toggleEditing","newAttachmentURL","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","update","onDeletePhotoClick","src","autoFocus","width","height","htmlFor","marginRight","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","open","faTrashAlt","faPencilAlt","NweetFactory","userObj","attachment","setAttachment","nweet","setNweet","uid","Date","now","createdAt","add","maxLength","faArrowRight","Home","nweets","setNweets","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","newPhoto","setNewPhoto","editingName","setEditingName","editingPhoto","setEditingPhoto","toggleEditingName","toggleEditingPhoto","onSubmitName","updateProfile","onSubmitPhoto","photoRef","attachURL","borderRadius","signOut","push","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","exists","newPhotoURL","set","currentUser","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3e598fc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from \"fBase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        };\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if(newAccount) {\r\n                const data =  await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            } else {\r\n                const data =  await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                ) \r\n            }\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                    <input \r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        required\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        className=\"authInput\" />\r\n                    <input \r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        placeholder=\"Password\" \r\n                        required\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        className=\"authInput\" />\r\n                    <input \r\n                        type=\"submit\" \r\n                        value={newAccount ? \"Sign up\" : \"Sign in\"}\r\n                        className=\"authInput authSubmit\" />\r\n                    {error && <span className=\"authError\">{error}</span>}\r\n                </form>\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"이미 계정이 있으신가요?\" : \"계정이 없으신가요?\"}</span>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFortAwesomeAlt,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fBase\";\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async(event) => {\r\n        const {\r\n            target:{name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name ===\"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faFortAwesomeAlt}\r\n                color={\"#98adfa\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { dbService, storageService } from \"fBase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const [newAttachment, setNewAttachment] = useState(\"\");\r\n    const [userName, setUserName] = useState(null);\r\n    const [userPhoto, setUserPhoto] = useState(null);\r\n    const date = nweetObj.createdAtDate.split(' ');\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"users\").doc(nweetObj.creatorId).get()\r\n        .then(doc => {\r\n                setUserName(doc.data().displayName);\r\n                setUserPhoto(doc.data().photoURL);\r\n        });\r\n    }, [])\r\n\r\n        \r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentURL).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let newAttachmentURL = nweetObj.attachmentURL;\r\n        if(newAttachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${nweetObj.creatorId}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(newAttachment, \"data_url\");\r\n            newAttachmentURL = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n            attachmentURL : newAttachmentURL\r\n        });\r\n        setEditing(false);\r\n    }\r\n\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onDeletePhotoClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete?\");\r\n        if (ok) {\r\n            await storageService.refFromURL(nweetObj.attachmentURL).delete();\r\n            await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n                attachmentURL:\"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const onChangePhotoClick = (event) => {\r\n        const {\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setNewAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setNewAttachment(\"\");\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <img className=\"nweetProfilePic\" src={userPhoto} />\r\n            <div className=\"nweet\">\r\n\r\n            \r\n            {editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input \r\n                                onChange={onChange} \r\n                                type=\"text\" \r\n                                placeholder=\"Edit it\" \r\n                                value={newNweet} \r\n                                required\r\n                                autoFocus\r\n                                className=\"formInput\" />\r\n                            {nweetObj.attachmentURL ? (\r\n                                <>\r\n                                    <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" />\r\n                                    <span className=\"formBtn cancelEditBtn\" onClick={onDeletePhotoClick}>Delete Photo</span>\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"modify_attcs\">\r\n                                    <label htmlFor=\"modf\" className=\"modify__label\">\r\n                                        <span style={{marginRight:10}}>Add photos</span>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </label>\r\n                                    <input \r\n                                        id=\"modf\"\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        onChange={onChangePhotoClick}\r\n                                        style={{\r\n                                        opacity: 0,\r\n                                        }}\r\n                                    />\r\n                                    {newAttachment && (\r\n                                        <div className=\"modify__attachment\">\r\n                                            <img\r\n                                            src={newAttachment}\r\n                                            style={{\r\n                                                backgroundImage: newAttachment,\r\n                                            }}\r\n                                            />\r\n                                            <div className=\"modify__clear\" onClick={onClearAttachment}>\r\n                                            <span style={{marginRight:10}}>Remove</span>\r\n                                            <FontAwesomeIcon icon={faTimes} />\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                             <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        \r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>\r\n                ) : (\r\n                        <>\r\n                            <h6>{userName} | {date[3]} {date[1]} {date[2]} {date[4]}</h6>\r\n                            <h4>{nweetObj.text}</h4>\r\n                            {nweetObj.attachmentURL && (<img src={nweetObj.attachmentURL} onClick = {() => window.open(nweetObj.attachmentURL, 'new', 'top=100, left=100')} /> )}\r\n                            {isOwner && (\r\n                                <div className=\"nweet__actions\">\r\n                                    <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrashAlt} color={\"#98adfa\"} />\r\n                                    </span>\r\n                                    <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} color={\"#98adfa\"} />\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Nweet;","import React, { useState }  from \"react\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [nweet, setNweet] = useState(\"\");\r\n    \r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentURL = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentURL = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text:nweet,\r\n            createdAtDate : Date(Date.now()),\r\n            createdAt : Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentURL,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target:{value},\r\n    } = event;\r\n    setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <textarea\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <button type=\"submit\" className=\"factoryInput__arrow\">\r\n                    <FontAwesomeIcon icon={faArrowRight} />\r\n                </button>\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input \r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                  opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from \"fBase\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot)=>{\r\n            const nweetArray = snapshot.docs.map(doc=>({id:doc.id, ...doc.data()}));\r\n            setNweets(nweetArray);\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet =>\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId===userObj.uid}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n)}\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService, storageService } from \"fBase\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n// import Nweet from 'components/Nweet';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport default ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [newPhoto, setNewPhoto] = useState(null);\r\n    const [editingName, setEditingName] = useState(false);\r\n    const [editingPhoto, setEditingPhoto] = useState(false);\r\n    // const [nweets, setNweets] = useState([]);\r\n    const toggleEditingName = () => setEditingName((prev) => !prev);\r\n    const toggleEditingPhoto = () => setEditingPhoto((prev) => !prev);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        // window.location.replace(\"/\");\r\n        history.push(\"/\");\r\n    };\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     dbService.collection(\"nweets\").where('creatorId', '==', userObj.uid).orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot)=>{\r\n    //         const nweetArray = snapshot.docs.map(doc=>({id:doc.id, ...doc.data()}));\r\n    //         setNweets(nweetArray);\r\n    //     })\r\n    // }, []);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmitName = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName:newDisplayName });\r\n            refreshUser();\r\n        };\r\n        setEditingName(false);\r\n    }\r\n\r\n    const onSubmitPhoto = async (event) => {\r\n        event.preventDefault();\r\n        if(newPhoto) {\r\n            await storageService.refFromURL(userObj.photoURL).delete()\r\n            const photoRef = storageService.ref().child(`${userObj.uid}/profile/${uuidv4()}`);\r\n            const response = await photoRef.putString(newPhoto, \"data_url\");\r\n            const attachURL = await response.ref.getDownloadURL();\r\n            await userObj.updateProfile({photoURL:attachURL});\r\n            \r\n            refreshUser();\r\n        };\r\n        setNewPhoto(null);\r\n        setEditingPhoto(false);\r\n    }\r\n\r\n    const onChangePhotoClick = (event) => {\r\n        const {\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setNewPhoto(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n        { editingName ? (\r\n            <form onSubmit={onSubmitName} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\" \r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Confirm\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                    marginTop: 10,\r\n                    }}\r\n                />\r\n                \r\n                <span className=\"formBtn cancelEditBtn\" onClick={toggleEditingName}>Cancel Editing</span>\r\n            </form>\r\n        \r\n         ) : (\r\n            <div className=\"profileForm\">\r\n                <span className=\"formBtn editProfileBtn\" onClick={toggleEditingName}>Change Name</span>\r\n            </div>  \r\n         )}\r\n\r\n    { editingPhoto ? (\r\n            <form onSubmit={onSubmitPhoto} className=\"profileForm  modify__propic\">\r\n                <label htmlFor=\"change-pic\" className=\"propic__label\">\r\n                    <span style={{marginRight:10}}>Add Photo</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input \r\n                    className=\"formBtn editProfileBtn\" \r\n                    type=\"file\" \r\n                    id=\"change-pic\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChangePhotoClick}\r\n                    style={{\r\n                        opacity: 0,\r\n                      }}\r\n                />\r\n                {newPhoto && (\r\n                    <div className=\"propic__img\">\r\n                        <img\r\n                        src={newPhoto}\r\n                        style={{\r\n                            backgroundImage: newPhoto,\r\n                        }}\r\n                        width=\"80px\" height=\"80px\" style={{borderRadius:50}}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Confirm\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                    marginTop: 10,\r\n                    }}\r\n                />\r\n                \r\n                <span className=\"formBtn cancelEditBtn\" onClick={toggleEditingPhoto}>Cancel Editing</span>\r\n            </form>\r\n        \r\n         ) : (\r\n            <div className=\"profileForm\">\r\n                <span className=\"formBtn editProfileBtn\" onClick={toggleEditingPhoto}>Change Photo</span>\r\n            </div>  \r\n         )}\r\n\r\n\r\n\r\n\r\n            <div className=\"profileForm\">\r\n                <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\r\n            </div>\r\n            {/* <div>\r\n                {nweets.map(nweet =>\r\n                        <Nweet \r\n                            key={nweet.id} \r\n                            nweetObj={nweet} \r\n                            isOwner={nweet.creatorId===userObj.uid}\r\n                        />\r\n                    )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFortAwesomeAlt} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nconst Navigation = ({userObj}) => {\r\n\r\n// return에서 지운 프로필 아이콘                     <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faFortAwesomeAlt} color={\"#98adfa\"} size=\"3x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                    <img src={userObj.photoURL} className=\"profilePic\" width=\"30px\" height=\"30px\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n)};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                    style={{\r\n                      maxWidth: 890,\r\n                      width: \"100%\",\r\n                      margin: \"0 auto\",\r\n                      marginTop: 80,\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}  />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}  />\r\n                        </Route>\r\n                    </div> \r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService, dbService } from 'fBase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(()=>{\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        dbService.collection(\"users\").doc(user.uid).get()\n          .then(doc => {\n            if (!doc.exists) {\n              let newDisplayName = user.displayName\n              let newPhotoURL = user.photoURL\n              if(!user.displayName) {\n                newDisplayName = user.email.split('@')[0]\n              }\n              if(!user.photoURL) {\n                newPhotoURL = \"https://firebasestorage.googleapis.com/v0/b/nwitter-c94a2.appspot.com/o/icon.png?alt=media&token=2838bc8e-050f-4d1f-82b3-114e4e5a1a7f\";\n              }\n              \n              dbService.collection(\"users\").doc(user.uid).set({\n                displayName : newDisplayName,\n                uid : user.uid,\n                photoURL : newPhotoURL,\n                email : user.email\n              });\n              authService.currentUser.updateProfile({\n                displayName : newDisplayName,\n                photoURL : newPhotoURL\n              });\n            }\n          })\n\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          photoURL : user.photoURL,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      };\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = async () => {\n    const user = authService.currentUser;\n    await dbService.collection(\"users\").doc(user.uid).set({\n      displayName : user.displayName,\n      uid : user.uid,\n      photoURL : user.photoURL,\n      email : user.email\n    })\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      photoURL : user.photoURL,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  };\n\n  // return에서 제외한 푸터     <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n  \n  return (\n  <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n\n  </>\n)}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}